#!/bin/sh
# postrm script for gvmd-common
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    purge)
	rm -f /var/log/gvm/gvmd.log
	rmdir --ignore-fail-on-non-empty /var/log/gvm || true 2>/dev/null

	rm -f /var/lib/gvm/CA/cacert.pem
	rm -f /var/lib/gvm/CA/clientcert.pem
	rm -f /var/lib/gvm/CA/servercert.pem
	rmdir --ignore-fail-on-non-empty /var/lib/gvm/CA 2>/dev/null || true

	rm -f /var/lib/gvm/private/CA/cakey.pem
	rm -f /var/lib/gvm/private/CA/clientkey.pem
	rm -f /var/lib/gvm/private/CA/serverkey.pem
	rmdir --ignore-fail-on-non-empty /var/lib/gvm/private/CA 2>/dev/null || true
	rmdir --ignore-fail-on-non-empty /var/lib/gvm/private 2>/dev/null || true

	rm -rf /var/lib/gvm/gvmd/gnupg

	rmdir --ignore-fail-on-non-empty /var/lib/gvm/gvmd 2>/dev/null || true
	rmdir --ignore-fail-on-non-empty /var/lib/gvm 2>/dev/null || true
    ;;

    remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
